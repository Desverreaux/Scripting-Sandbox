#===N-O-T-E-S=======
# this image is designed with the expectation that certain volumes will be mounted during the creation of the container
# ----- this functionality is not in the dockerfile itself simply because I'm not sure how to do that :/

FROM ubuntu:xenial
MAINTAINER John Desverreaux version: 0.1

#creates a directory for files that are external to the container, shell scripts used in initialization is a good example
RUN mkdir /docker

#copies external scripts into the container
COPY [ "./entrypoint.sh", "/docker/entrypoint.sh" ]
#updates and installs system packages
RUN apt-get update
RUN apt-get install npm --yes   
RUN apt-get install composer --yes
RUN apt-get install apt-utils --yes
RUN apt-get install autoconf curl git subversion make unzip wget dialog --yes
RUN apt-get install nginx --yes


#RUN echo "Acquire::GzipIndexes \"false\"; Acquire::CompressionTypes::Order:: \"gz\";" >/etc/apt/apt.conf.d/docker-gzip-indexes


# It needs to be in the right directory to run some composer lines later
    RUN rm -R /var/www/html
    RUN cd /var/www

    RUN apt-get install software-properties-common -y
    RUN apt-get install python-software-properties -y

#install php modules 
    RUN apt-get install php-gd --yes 
    #RUN add-add-repository ppa:ondrej/php -y
    # the ascii encoding of the repo in the command above was causing some issues before, the command below "forces" utf8.#

    RUN LC_ALL=C.UTF-8 add-apt-repository ppa:ondrej/php -y  
    
    RUN apt-get update -y
    RUN apt-get install php7.2 -y
    RUN apt-get install php-pear php7.2-curl php7.2-dev php7.2-gd php7.2-mbstring php7.2-zip php7.2-mysql php7.2-xml -y
    RUN apt-get install php-fpm --yes
    RUN update-alternatives --set php /usr/bin/php7.2

#install webapp dependancies 


#download the site repo 
    #RUN git clone https://github.com/Desverreaux/Desverreaux.com.git


#install composer
    #the contents of the ComposerSetup file can be found at https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
    COPY ./ComposerSetup.sh /docker/
    RUN sh /docker/ComposerSetup.sh

    #RUN cp ./composer.phar / 

    #RUN composer install
    #RUN composer update

#install nodejs
    RUN curl -sL https://deb.nodesource.com/setup_10.x | bash -
    RUN apt-get install nodejs -y   

#allocate volumes 
    VOLUME /var/www
    VOLUME /etc/nginx/conf.d
    VOLUME /logs

EXPOSE 80


CMD ["sh","/docker/entrypoint.sh"]
